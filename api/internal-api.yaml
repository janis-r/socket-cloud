openapi: 3.0.1
info:
  title: Internal API
  description: Internal API of the service to communicate within layers of service
  contact:
    name: Jānis Radiņš
    email: jr@janisradins.com
  version: 1.0.0
tags:
  - name: Context config API
  - name: Access token API
paths:
  /context-config/{contextId}/:
    get:
      summary: Retrieve context config by id
      tags:
        - Context config API
      parameters:
        - $ref: "#/components/parameters/contextId"
      responses:
        200:
          $ref: "#/components/schemas/ContextConfig"
        404:
          description: Context config with requested id is not found.
      security:
        - ApiAuthKey: []
    delete:
      summary: Delete context config by id.
      tags:
        - Context config API
      parameters:
        - $ref: "#/components/parameters/contextId"
      responses:
        200:
          description: Success!
        404:
          description: Context config with requested id is not found.
      security:
        - ApiAuthKey: []

  /context-config/:
    post:
      summary: Create or update context config
      tags:
        - Context config API
      parameters:
        - $ref: "#/components/parameters/contextId"
      requestBody:
        required: true
        description: Context config data to be saved.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContextConfig"
      responses:
        200:
          description: Success!
        400:
          $ref: "#/components/responses/InvalidInputData"
      security:
        - ApiAuthKey: []

  /access-token/:
    post:
      summary: Create access token
      tags:
        - Access token API
      requestBody:
        required: true
        description: Access token data to be saved.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenData"
      responses:
        200:
          description: Success!
        400:
          $ref: "#/components/responses/InvalidInputData"
      security:
        - ApiAuthKey: []

  /access-token/{accessToken}/:
    parameters:
      - $ref: "#/components/parameters/accessToken"
    get:
      summary: Get access token info.
      tags:
        - Access token API
      responses:
        200:
          $ref: "#/components/responses/TokenData"
        404:
          description: Unknown token id.
    delete:
      summary: Delete access token data.
      tags:
        - Access token API
      responses:
        200:
          description: Record is deleted.
        404:
          description: Unknown token id.

  /access-token/context/{contextId}/:
    get:
      summary: Retrieve list of access tokens by context id.
      tags:
        - Access token API
      parameters:
        - $ref: "#/components/parameters/contextId"
      responses:
        200:
          description: Return list of token info belonging to requested configuration context.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TokenData"

components:
  schemas:
    ContextConfig:
      description: Context configuration data
      type: object
      properties:
        id:
          type: string
          description: Context id.
        protocol:
          type: string
          description: Data exchange protocol used by this context.
      required:
        - id
        - protocol
    #        TODO: Full list of context config properties might follow once ConfigurationContext shape is stable

    TokenData:
      description: Access token configuration data
      type: object
      properties:
        token:
          type: string
          minLength: 10
          maxLength: 50
          pattern: "^[\\w\\d-]+$"
        contextId:
          type: string
          description: Context id this access token belongs to.
          pattern: "^[\\w\\d-]+$"
        accessRights:
          description: General access rights that apply to all channells if not set otherwise within per channel config.
          oneOf:
            - $ref: "#/components/schemas/AccessRightsToken"
            - $ref: "#/components/schemas/AccessRightsPermissions"
        channelConfig:
          description: Per channel configurationn where object key refers to channel id and value represent configuration override over accessRights configuration.
          type: object
          additionalProperties:
            oneOf:
              - $ref: "#/components/schemas/AccessRightsToken"
              - $ref: "#/components/schemas/AccessRightsPermissions"
      required:
        - token
        - contextId

    AccessRightsToken:
      description: String token identifying access rights
      type: string
      enum:
        - all

    AccessRightsPermissions:
      description: Detailed list of permissions allowed for bearer of token
      type: object
      properties:
        postIndividualMessages:
          type: boolean
        postChannelMessages:
          type: boolean
        postMultiChannelMessages:
          type: boolean

  parameters:
    contextId:
      in: path
      name: contextId
      required: true
      schema:
        type: string
        pattern: "^[\\w\\d-]+$"
      description: Configuration context path param

    accessToken:
      in: path
      name: accessToken
      required: true
      schema:
        type: string
        pattern: "^[\\w\\d-]+$"
      description: Access token path param

  responses:
    Unauthorized:
      description: API key is missing, invalid or data context is disabled.
      headers:
        WWW_Authenticate:
          schema:
            type: string
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
            required:
              - error

    InvalidInputData:
      description: Input data is not valid  - either not set or not getting through validation.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: Validation error message.
              field:
                type: string
                description: Field id which caused error, if error is produced by specific field.
            required:
              - error

    TokenData:
      description: Data associated with requested token
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TokenData"

  securitySchemes:
    ApiAuthKey:
      type: apiKey
      in: header
      name: X-API-KEY
