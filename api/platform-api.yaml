openapi: 3.0.1
info:
  title: Platform API
  description: An API designed to execute actions within operator data scope via API calls.
  contact:
    name: Jānis Radiņš
    email: jr@janisradins.com
  version: 1.0.0
servers:
  - url: /api/platform/
tags:
  - name: Publishing
    description: Api to publish messages vai exteral calls
  - name: Connection
    description: An Api provided to allow operator interact with connections of its context.
  - name: Message cache
    description: Data channel message cache management Api.

paths:
  /{context}/individual-message/:
    post:
      summary: Post message to individual connection (or connections), identified by connection external id provided upon initialization.
      tags:
        - Publishing
      parameters:
        - $ref: "#/components/parameters/context"
      requestBody:
        required: true
        description: Data to be transfered to one or multiple connections.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IndividualMessage"
      responses:
        200:
          $ref: "#/components/responses/MessageDeliveryReport"
        400:
          $ref: "#/components/responses/BadRequestData"
        401:
          $ref: "#/components/responses/Unauthorized"
        405:
          $ref: "#/components/responses/ActionProhibited"
        413:
          $ref: "#/components/responses/PayloadTooLarge"
      security:
        - ApiAuthKey: []
  /{context}/channel-message/:
    post:
      summary: Post single message to data channel (or channels).
      tags:
        - Publishing
      parameters:
        - $ref: "#/components/parameters/context"
      requestBody:
        description: Message data object to be delivered to recipients.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChannelMessage"
      responses:
        200:
          $ref: "#/components/responses/MessageDeliveryReport"
        400:
          $ref: "#/components/responses/BadRequestData"
        401:
          $ref: "#/components/responses/Unauthorized"
        405:
          $ref: "#/components/responses/ActionProhibited"
        413:
          $ref: "#/components/responses/PayloadTooLarge"
      security:
        - ApiAuthKey: []
  /{context}/multi-channel-message/:
    post:
      summary: Post list of messages to data channels.
      tags:
        - Publishing
      parameters:
        - $ref: "#/components/parameters/context"
      requestBody:
        description: List of message data objects to be delivered to recipients.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ChannelMessage"
      responses:
        200:
          $ref: "#/components/responses/MessageDeliveryReport"
        400:
          $ref: "#/components/responses/BadRequestData"
        401:
          $ref: "#/components/responses/Unauthorized"
        405:
          $ref: "#/components/responses/ActionProhibited"
        413:
          $ref: "#/components/responses/PayloadTooLarge"
      security:
        - ApiAuthKey: []

  /{context}/connection/{connectionId}:
    parameters:
      - $ref: "#/components/parameters/context"
      - in: path
        name: connectionId
        required: true
        schema:
          type:
            string
    get:
      summary: Retrieve connection status and runtime statistics
      tags:
        - Connection
      responses:
        200:
          description: Connection status data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  connectionId:
                    type: string
                    description: Internal id of a connection assigned by Platform.
                  externalId:
                    type: string
                    description: Internal id of a connection assigned by Operator during handshake.
                  uptime:
                    type: number
                    description: Seconds since connection is established.
                  bytesUploaded:
                    type: number
                  bytesDownloaded:
                    type: number
                required:
                  - connectionId
                  - uptime
                  - bytesUploaded
                  - bytesDownloaded
        404:
          description: Connection could not be found.
      security:
        - ApiAuthKey: []
    delete:
      summary: Drop client connection
      tags:
        - Connection
      responses:
        200:
          description: Connection found and dropped.
        404:
          description: Connection could not be found.
      security:
        - ApiAuthKey: []

  /{context}/message-cache/{channel}:
    parameters:
      - $ref: "#/components/parameters/context"
      - $ref: "#/components/parameters/channel"
    get:
      summary: Retrieve message cache stats of a channel.
      tags:
        - Message cache
      responses:
        200:
          description: Channel message cache stats.
          content:
            application/json:
              schema:
                type: object
                properties:
                  length:
                    type: integer
                    description: Number of messages in cache.
                  sizeInBytes:
                    type: integer
                    description: Bytes taken by all messages in cache.
                required:
                  - length
                  - sizeInBytes
        404:
          description: Required channel do not have message cache enabled.

      security:
        - ApiAuthKey: []
    delete:
      summary: Clear data channel message cache.
      tags:
        - Message cache
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: integer
                    description: Number of messages removed from cache due to this call.
        404:
          description: Required channel do not have message cache enabled.
      security:
        - ApiAuthKey: []
components:
  schemas:
    ChannelMessage:
      description: Message data format to be delivered to data cahnnel.
      type: object
      properties:
        channels:
          description: List of data channel names to which message should be delivered.
          type: array
          items:
            type: string
        payload:
          type: string
      required:
        - channel
        - payload
    IndividualMessage:
      description: Message data format to be delivered to indiviual connection.
      type: object
      properties:
        connectionIds:
          type: array
          items:
            type: string
        payload:
          type: string
      required:
        - connectionIds
        - payload
  parameters:
    context:
      name: context
      in: path
      required: true
      schema:
        type: string
        pattern: "^[a-zA-Z\\d\\.-]"
      description: Configuration context id
    channel:
      name: channel
      in: path
      required: true
      schema:
        type: string
        pattern: "^[a-zA-Z\\d\\.-]"
      description: Data channel id
  responses:
    MessageDeliveryReport:
      description: Message delivery report.
      content:
        application/json:
          schema:
            type: object
            properties:
              recipients:
                description: Number of recipients for whom message was sent.
                type: number
            required:
              - recipients
    Unauthorized:
      description: API key is missing, invalid or data context is disabled.
      headers:
        WWW_Authenticate:
          schema:
            type: string
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
            required:
              - error
    ActionProhibited:
      description: Action is not allowed
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
            required:
              - error
    BadRequestData:
      description: Malformed request data.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              field:
                type: string
                description: Name of a data field that produced error.
            required:
              - error
    PayloadTooLarge:
      description: Paylaod exceed limit.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
            required:
              - error

  securitySchemes:
    ApiAuthKey:
      type: apiKey
      in: header
      name: X-API-KEY
