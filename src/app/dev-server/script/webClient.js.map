{"version":3,"file":"webClient.js","sources":["../node_modules/tslib/tslib.es6.js","../src/lib/utils/CallbackCollection.ts","../src/lib/deliveryProtocolClient/model/WebSocketAdapter.ts","../node_modules/ugd10a/dist/esnext/data/Cached.js","../node_modules/ugd10a/dist/esnext/object.js","../node_modules/ugd10a/dist/esnext/data/CachedCollection.js","../node_modules/ugd10a/dist/esnext/data/collection/CollectionAction.js","../node_modules/ugd10a/dist/esnext/ExecutionQueue.js","../node_modules/ugd10a/dist/esnext/time-map.js","../src/lib/deliveryProtocol/data/MessageType.ts","../src/lib/utils/is-array-of.ts","../src/lib/utils/validate-object.ts","../src/lib/deliveryProtocol/util/MessageValidator.ts","../src/lib/deliveryProtocol/data/serverMessage/PushToClientMessage.ts","../src/lib/deliveryProtocol/data/cache/CachedMessage.ts","../src/lib/deliveryProtocol/data/serverMessage/RestoreChannelsResponseMessage.ts","../src/lib/deliveryProtocol/data/serverMessage/ServerMessage.ts","../src/lib/deliveryProtocol/data/clientMessage/SubscribeMessage.ts","../src/lib/deliveryProtocol/data/clientMessage/UnsubscribeMessage.ts","../src/lib/deliveryProtocol/data/cache/CacheFilter.ts","../src/lib/deliveryProtocol/data/clientMessage/RestoreChannelsRequestMessage.ts","../src/lib/deliveryProtocol/data/globalMessageChannel.ts","../src/lib/deliveryProtocol/data/clientMessage/PushToServerMessage.ts","../src/lib/deliveryProtocolClient/model/SocketClient.ts","../src/app/web-client/webClient.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export class CallbackCollection<T> {\r\n\r\n    private readonly callbacks = new Map<CallbackFunction<T>, CallbackProperties<T>>();\r\n\r\n    constructor() {\r\n        this.manage = this.manage.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Add callback to collection\r\n     * @param callback\r\n     */\r\n    readonly add = (callback: CallbackFunction<T>): CallbackManager<T> => {\r\n        const {callbacks} = this;\r\n        if (callbacks.has(callback)) {\r\n            return {success: false};\r\n        }\r\n\r\n        const callbackProps: CallbackProperties<T> = {};\r\n        callbacks.set(callback, callbackProps);\r\n\r\n        const onComplete = (callback: OnCompleteCallback) => callbackProps.onComplete = callback;\r\n        const times = (count: number) => {\r\n            callbackProps.executionLimit = count;\r\n            return {onComplete};\r\n        };\r\n        const once = () => times(1);\r\n        const twice = () => times(2);\r\n        const guard = (func: GuardFunction<T>) => {\r\n            callbackProps.guard = func;\r\n            return {once, twice, times};\r\n        };\r\n\r\n        return {success: true, guard, once, twice, times};\r\n    };\r\n    /**\r\n     * Check if collection has registered callback\r\n     * @param callback\r\n     */\r\n    readonly has = (callback: CallbackFunction<T>) => this.callbacks.has(callback);\r\n    /**\r\n     * Remove callback\r\n     * @param callback\r\n     */\r\n    readonly remove = (callback: CallbackFunction<T>): boolean => {\r\n        const {callbacks} = this;\r\n        if (callbacks.has(callback)) {\r\n            callbacks.delete(callback);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Remove all callbacks\r\n     */\r\n    readonly clear = () => this.callbacks.clear();\r\n\r\n    /**\r\n     * Add callback to collection, if it's provided and return CallbackManager\r\n     * @param callback\r\n     */\r\n    manage(callback: CallbackFunction<T>): CallbackManager<T>;\r\n    /**\r\n     * If no callback is specified proceed to collection management methods\r\n     */\r\n    manage(): Pick<this, \"has\" | \"remove\" | \"clear\">;\r\n    manage(callback?: CallbackFunction<T>) {\r\n        if (callback) {\r\n            return this.add(callback);\r\n        }\r\n        const {has, remove, clear} = this;\r\n        return {has, remove, clear};\r\n    }\r\n\r\n    /**\r\n     * Execute all callbacks\r\n     * @param data\r\n     */\r\n    readonly execute = (data: T): number => {\r\n        const {callbacks} = this;\r\n        let executed = 0;\r\n        for (const [callback, properties] of callbacks) {\r\n            if (properties.guard && !properties.guard(data)) {\r\n                continue;\r\n            }\r\n\r\n            callback(data);\r\n            executed++;\r\n            if (properties.executionLimit) {\r\n                if (!properties.executionCount) {\r\n                    properties.executionCount = 1;\r\n                } else {\r\n                    properties.executionCount++;\r\n                }\r\n                if (properties.executionCount === properties.executionLimit) {\r\n                    if (properties.onComplete) {\r\n                        properties.onComplete();\r\n                    }\r\n                    callbacks.delete(callback);\r\n                }\r\n            }\r\n        }\r\n\r\n        return executed;\r\n    };\r\n}\r\n\r\ntype CallbackFunction<T> = (data: T) => unknown;\r\ntype GuardFunction<T> = (data: T) => boolean;\r\ntype OnCompleteCallback = () => void;\r\ntype CallbackProperties<T> = {\r\n    executionLimit?: number,\r\n    executionCount?: number,\r\n    guard?: GuardFunction<T>,\r\n    onComplete?: OnCompleteCallback\r\n};\r\n\r\nexport type CallbackManager<T> = {\r\n    /**\r\n     * Defines if callback adding was a success - one callback can be added only once and so this property will\r\n     * be true on first attempt and false on all following calls with same callback.\r\n     */\r\n    success: boolean;\r\n    /**\r\n     * Limit callback execution times to 1\r\n     */\r\n    once?: () => { onComplete: (callback: OnCompleteCallback) => void };\r\n    /**\r\n     * Limit callback execution times to 2\r\n     */\r\n    twice?: () => { onComplete: (callback: OnCompleteCallback) => void };\r\n    /**\r\n     * Limit callback execution times to value defined in param\r\n     * @param count\r\n     */\r\n    times?: (count: number) => { onComplete: (callback: OnCompleteCallback) => void };\r\n    /**\r\n     * Guard callback execution by interpreting executed callback data.\r\n     * @param func\r\n     */\r\n    guard?: (func: GuardFunction<T>) => Pick<CallbackManager<T>, \"once\" | \"twice\" | \"times\">;\r\n};\r\n\r\ntype AddCallback<T> =  (callback: CallbackFunction<T>) => CallbackManager<T>;\r\ntype ManageCallbacks<T> = () => Pick<CallbackCollection<T>, \"has\" | \"remove\" | \"clear\">;\r\nexport type Callback<T> =  AddCallback<T> | ManageCallbacks<T>;\r\n","import {CloseCode} from \"../../websocketConnection/data/CloseCode\";\r\nimport {ConnectionState} from \"../../clientConnectionPool/data/ConnectionState\";\r\nimport {CallbackCollection} from \"../../utils/CallbackCollection\";\r\nimport {Adapter} from \"../data/Adapter\";\r\n\r\nexport class WebSocketAdapter implements Adapter {\r\n\r\n    private onOpenCallback = new CallbackCollection<void>();\r\n    private onMessageCallback = new CallbackCollection<string>();\r\n    private onErrorCallback = new CallbackCollection<string>();\r\n    private onCloseCallback = new CallbackCollection<{ code?: CloseCode; reason?: string }>();\r\n\r\n    private readonly socket: WebSocket;\r\n\r\n    constructor(url: string) {\r\n        this.socket = new WebSocket(url);\r\n        this.socket.onopen = () => this.onOpenCallback.execute();\r\n        this.socket.onmessage = ({data}) => this.onMessageCallback.execute(data);\r\n        this.socket.onerror = event => this.onErrorCallback.execute(event.toString());\r\n        this.socket.onclose = ({code, reason}) => this.onCloseCallback.execute({code, reason});\r\n    }\r\n\r\n    readonly onOpen = this.onOpenCallback.manage;\r\n    readonly onMessage = this.onMessageCallback.manage;\r\n    readonly onError = this.onErrorCallback.manage;\r\n    readonly onClose = this.onCloseCallback.manage;\r\n\r\n    get state(): ConnectionState {\r\n        return this.socket.readyState;\r\n    }\r\n\r\n    send(message: string): void {\r\n        this.socket.send(message);\r\n    }\r\n\r\n    close(code?: CloseCode, reason?: string): void {\r\n        this.socket.close(code, reason);\r\n    }\r\n}\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Timer } from \"../time\";\r\nexport class Cached {\r\n    constructor(updateFunction, ttl, useCacheWhileUpdating = true) {\r\n        this.updateFunction = updateFunction;\r\n        this.ttl = ttl;\r\n        this.useCacheWhileUpdating = useCacheWhileUpdating;\r\n        this.invalidDataStep = 5;\r\n        this.data = null;\r\n        this.updatePromise = null;\r\n        this.lastUpdateTime = 0;\r\n        if (!updateFunction) {\r\n            throw new Error(`Cached instance error - updateFunction is not provided`);\r\n        }\r\n        if (isNaN(ttl) || ttl <= 0) {\r\n            throw new Error(`Cached instance error - ttl (${ttl}) is not usable`);\r\n        }\r\n    }\r\n    getData() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const timeSinceLastUpdate = this.lastUpdateTime ? Timer.now - this.lastUpdateTime : NaN;\r\n            if (!this.updatePromise && (!this.data || isNaN(timeSinceLastUpdate) || timeSinceLastUpdate > this.ttl)) {\r\n                if (timeSinceLastUpdate > this.ttl * this.invalidDataStep) {\r\n                    this.data = null;\r\n                }\r\n                this.update();\r\n            }\r\n            if (this.data && (!this.updatePromise || this.useCacheWhileUpdating)) {\r\n                return this.data;\r\n            }\r\n            return this.updatePromise;\r\n        });\r\n    }\r\n    forceUpdate() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this.updatePromise) {\r\n                this.update();\r\n            }\r\n            return this.updatePromise;\r\n        });\r\n    }\r\n    get validFor() {\r\n        if (!this.lastUpdateTime) {\r\n            return -1;\r\n        }\r\n        const validUntil = this.lastUpdateTime + this.ttl;\r\n        return validUntil - Timer.now;\r\n    }\r\n    update() {\r\n        this.updatePromise = this.updateFunction();\r\n        this.updatePromise.then(value => {\r\n            this.data = value;\r\n            this.updatePromise = null;\r\n            this.lastUpdateTime = Timer.now;\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=Cached.js.map","export function findObjectKeyForValue(object, value) {\r\n    const keys = Object.keys(object);\r\n    while (keys && keys.length > 0) {\r\n        const key = keys.shift();\r\n        if (object.hasOwnProperty(key) && object[key] === value) {\r\n            return key;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function valueBelongsToEnum(object, value) {\r\n    return findObjectKeyForValue(object, value) !== null;\r\n}\r\nexport function removeObjectNullValues(object) {\r\n    for (const i in object) {\r\n        if (!object.hasOwnProperty(i)) {\r\n            continue;\r\n        }\r\n        if (object[i] === null) {\r\n            delete object[i];\r\n            continue;\r\n        }\r\n        if (typeof object[i] === \"object\") {\r\n            object[i] = removeObjectNullValues(object[i]);\r\n        }\r\n    }\r\n    return object;\r\n}\r\nexport function uniqueValues(values) {\r\n    const newSet = [];\r\n    for (const entry of values) {\r\n        if (newSet.indexOf(entry) === -1) {\r\n            newSet.push(entry);\r\n        }\r\n    }\r\n    return newSet;\r\n}\r\n//# sourceMappingURL=object.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Timer } from \"../time\";\r\nimport { uniqueValues } from \"../object\";\r\nexport class CachedCollection {\r\n    constructor(fetchFunction, ttl, inputTypeGuard) {\r\n        this.fetchFunction = fetchFunction;\r\n        this.ttl = ttl;\r\n        this.inputTypeGuard = inputTypeGuard;\r\n        this.dataCache = new Map();\r\n        this.dataFetchesInProgress = new Map();\r\n        this.cleanupInterval = null;\r\n        if (!fetchFunction) {\r\n            throw new Error(`CachedCollection error - fetchFunction is not provided`);\r\n        }\r\n        if (isNaN(ttl) || ttl <= 0) {\r\n            throw new Error(`CachedCollection error - ttl (${ttl}) is not usable`);\r\n        }\r\n    }\r\n    getData(itemIds) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const { inputTypeGuard, dataCache, dataFetchesInProgress, fetchFunction } = this;\r\n            const response = new Map();\r\n            if (!itemIds || !itemIds.size) {\r\n                return response;\r\n            }\r\n            if (inputTypeGuard !== undefined && [...itemIds].some(entry => !inputTypeGuard(entry))) {\r\n                throw new Error(`CachedCollection error - some of item ids ${JSON.stringify([...itemIds])} are invalid according to type guard`);\r\n            }\r\n            const dataPromises = new Set();\r\n            const entriesToFetch = new Set();\r\n            for (const itemId of itemIds) {\r\n                if (dataCache.has(itemId)) {\r\n                    const data = dataCache.get(itemId);\r\n                    data.lastAccess = Timer.now;\r\n                    response.set(itemId, data.data);\r\n                }\r\n                else if (dataFetchesInProgress.has(itemId)) {\r\n                    dataPromises.add(dataFetchesInProgress.get(itemId));\r\n                }\r\n                else {\r\n                    entriesToFetch.add(itemId);\r\n                }\r\n            }\r\n            if (entriesToFetch.size > 0) {\r\n                const fetchCall = () => __awaiter(this, void 0, void 0, function* () {\r\n                    const dataPromise = new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\r\n                        const newEntries = yield fetchFunction(entriesToFetch);\r\n                        const { now: lastAccess } = Timer;\r\n                        for (const [input, data] of newEntries) {\r\n                            dataCache.set(input, { data, lastAccess });\r\n                        }\r\n                        resolve();\r\n                    }));\r\n                    entriesToFetch.forEach(input => dataFetchesInProgress.set(input, dataPromise));\r\n                    yield dataPromise;\r\n                    entriesToFetch.forEach(input => dataFetchesInProgress.delete(input));\r\n                });\r\n                dataPromises.add(fetchCall());\r\n            }\r\n            if (dataPromises.size > 0) {\r\n                yield Promise.all([...dataPromises]);\r\n                [...itemIds].filter(input => !response.has(input)).forEach(input => {\r\n                    if (!dataCache.has(input)) {\r\n                        console.debug(`CachedCollection error while fetching data for ${input}`);\r\n                    }\r\n                    else {\r\n                        response.set(input, dataCache.get(input).data);\r\n                    }\r\n                });\r\n            }\r\n            this.checkCleanupStatus();\r\n            return response;\r\n        });\r\n    }\r\n    delete(...itemsIds) {\r\n        return uniqueValues(itemsIds).map(id => this.dataCache.delete(id)).filter(state => state).length;\r\n    }\r\n    purge() {\r\n        const { dataCache, ttl } = this;\r\n        const { now } = Timer;\r\n        let deleteCount = 0;\r\n        for (const [input, { lastAccess }] of dataCache) {\r\n            if (lastAccess + ttl < now) {\r\n                dataCache.delete(input);\r\n                deleteCount++;\r\n            }\r\n        }\r\n        if (deleteCount > 0) {\r\n            this.checkCleanupStatus();\r\n        }\r\n        return deleteCount;\r\n    }\r\n    get size() {\r\n        return this.dataCache.size;\r\n    }\r\n    get entriesInProgress() {\r\n        return this.dataFetchesInProgress.size;\r\n    }\r\n    checkCleanupStatus() {\r\n        const { dataCache, ttl } = this;\r\n        if (dataCache.size > 0 && !this.cleanupInterval) {\r\n            this.cleanupInterval = setInterval(() => this.purge(), ttl);\r\n        }\r\n        else if (dataCache.size === 0 && !!this.cleanupInterval) {\r\n            clearInterval(this.cleanupInterval);\r\n            this.cleanupInterval = null;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=CachedCollection.js.map","export var CollectionAction;\r\n(function (CollectionAction) {\r\n    CollectionAction[CollectionAction[\"Add\"] = 0] = \"Add\";\r\n    CollectionAction[CollectionAction[\"Remove\"] = 1] = \"Remove\";\r\n    CollectionAction[CollectionAction[\"Clear\"] = 2] = \"Clear\";\r\n    CollectionAction[CollectionAction[\"Commit\"] = 3] = \"Commit\";\r\n})(CollectionAction || (CollectionAction = {}));\r\n//# sourceMappingURL=CollectionAction.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nexport class ExecutionQueue {\r\n    constructor() {\r\n        this.queue = new Array();\r\n        this.enqueue = (action) => __awaiter(this, void 0, void 0, function* () {\r\n            return new Promise((resolve, reject) => {\r\n                const { queue } = this;\r\n                queue.push(() => __awaiter(this, void 0, void 0, function* () {\r\n                    try {\r\n                        const response = yield action();\r\n                        resolve(response);\r\n                        return response;\r\n                    }\r\n                    catch (e) {\r\n                        reject(e);\r\n                        return null;\r\n                    }\r\n                }));\r\n                if (queue.length === 1) {\r\n                    this.executeNext();\r\n                }\r\n            });\r\n        });\r\n    }\r\n    executeNext() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const { queue } = this;\r\n            if (queue.length === 0) {\r\n                return;\r\n            }\r\n            yield queue[0]();\r\n            queue.shift();\r\n            this.executeNext();\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=ExecutionQueue.js.map","export const timeToObject = (time) => {\r\n    const values = [\r\n        [TimePart.Date, time.getDate()],\r\n        [TimePart.Month, time.getMonth() + 1],\r\n        [TimePart.Year, time.getFullYear()],\r\n        [TimePart.Hours, time.getHours()],\r\n        [TimePart.Minutes, time.getMinutes()],\r\n        [TimePart.Seconds, time.getSeconds()],\r\n        [TimePart.Epoch, time.getTime()]\r\n    ];\r\n    const timeMap = {};\r\n    values.forEach(([key, value]) => timeMap[key] = value);\r\n    return Object.assign(Object.assign({}, timeMap), { toMap: () => new Map(values) });\r\n};\r\nexport const timeToMap = (time) => timeToObject(time).toMap();\r\nexport const currentDateToMap = () => timeToMap(new Date());\r\nexport const currentDateToObject = () => timeToObject(new Date());\r\nexport var TimePart;\r\n(function (TimePart) {\r\n    TimePart[\"Date\"] = \"date\";\r\n    TimePart[\"Month\"] = \"month\";\r\n    TimePart[\"Year\"] = \"year\";\r\n    TimePart[\"Hours\"] = \"hours\";\r\n    TimePart[\"Minutes\"] = \"minutes\";\r\n    TimePart[\"Seconds\"] = \"seconds\";\r\n    TimePart[\"Epoch\"] = \"epoch\";\r\n})(TimePart || (TimePart = {}));\r\n//# sourceMappingURL=time-map.js.map","export enum MessageType {\r\n    Subscribe,\r\n    Unsubscribe,\r\n    PushToServer,\r\n    PushToClient,\r\n    RestoreRequest,\r\n    RestoreResponse\r\n}\r\n","export const isArrayOfStrings = (entry: unknown): entry is Array<string> => Array.isArray(entry) && !entry.some(v => typeof v !== \"string\");\r\nexport const isArrayOfNumbers = (entry: unknown): entry is Array<number> => Array.isArray(entry) && !entry.some(v => typeof v !== \"number\");\r\n","import {isArrayOfStrings} from \"./is-array-of\";\r\nimport {uniqueValues} from \"ugd10a\";\r\n\r\nexport function validateObject(value: unknown, configuration: FieldConfiguration[], allowExtraFields = false): true | ObjectValidationError {\r\n    if (typeof value !== \"object\") {\r\n        return {error: `Value is not an object: ${value}`};\r\n    }\r\n\r\n    const valueKeys = Object.keys(value);\r\n    for (const config of configuration) {\r\n        const {field: f, optional, exactValue, type, validator, notEmpty, itemValidator} = config;\r\n        const field = f as string;\r\n\r\n        const index = valueKeys.indexOf(field as string);\r\n        if (index === -1) {\r\n            if (optional) {\r\n                continue;\r\n            }\r\n            return {field, error: `Field is missing`};\r\n        }\r\n\r\n        const entryValue = value[field];\r\n\r\n        if ('exactValue' in config && entryValue !== exactValue) {\r\n            return {field, error: `Exact value mismatch. Expected: ${exactValue}, actual: ${entryValue}`};\r\n        }\r\n        if (type) {\r\n            if (isArrayOfStrings(type)) {\r\n                const uniqueTypes = uniqueValues(type);\r\n                if (!uniqueTypes.some(t => checkType(entryValue, t, notEmpty, itemValidator) === true)) {\r\n                    return {field, error: `Type mismatch. Value didn't match any of [${uniqueTypes}] types allowed`};\r\n                }\r\n            } else {\r\n                const typeResult = checkType(entryValue, type, notEmpty, itemValidator);\r\n                if (typeResult !== true) {\r\n                    return {field, ...typeResult};\r\n                }\r\n            }\r\n        }\r\n        if (validator && !validator(entryValue, field)) {\r\n            return {field, error: `Value ${entryValue} disallowed by validator`};\r\n        }\r\n        valueKeys.splice(index, 1);\r\n    }\r\n\r\n    if (valueKeys.length > 0 && !allowExtraFields) {\r\n        return {error: `Extra, disallowed fields [${valueKeys}] encountered`};\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction checkType(value: unknown, type: SupportedType, notEmpty: boolean, itemValidator: FieldConfiguration['itemValidator']): true | { error: string } {\r\n    if (type === \"array\") {\r\n        if (!Array.isArray(value)) {\r\n            return {error: `Type mismatch. Type is expected to be an array`};\r\n        }\r\n        if (notEmpty && !value.length) {\r\n            return {error: `Array is empty.`};\r\n        }\r\n        if (itemValidator) {\r\n            if (value.some(entry => !itemValidator(entry))) {\r\n                return {error: `Array item type mismatch.`};\r\n            }\r\n        }\r\n    } else if (type === \"string[]\") {\r\n        if (!isArrayOfStrings(value)) {\r\n            return {error: `Type mismatch. Type is expected to be an array of strings`};\r\n        }\r\n        if (notEmpty && !value.length) {\r\n            return {error: `Array length mismatch - is empty.`};\r\n        }\r\n        if (itemValidator) {\r\n            if (value.some(entry => !itemValidator(entry))) {\r\n                return {error: `Array item type mismatch.`};\r\n            }\r\n        }\r\n    } else {\r\n        const actualType = typeof value;\r\n        if (type !== actualType) {\r\n            return {error: `Type mismatch. Expected: ${type}, actual: ${actualType}`};\r\n        }\r\n        if (notEmpty && typeof value === \"string\" && !value.length) {\r\n            return {error: `String length mismatch - is empty.`};\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\ntype SupportedType =\r\n    \"undefined\"\r\n    | \"object\"\r\n    | \"boolean\"\r\n    | \"number\"\r\n    | \"bigint\"\r\n    | \"string\"\r\n    | \"string[]\"\r\n    | \"symbol\"\r\n    | \"function\"\r\n    | \"array\";\r\n\r\nexport type FieldConfiguration<T extends Record<string, any> = any> = {\r\n    field: keyof T,\r\n    optional?: true,\r\n    exactValue?: any,\r\n    type?: SupportedType | SupportedType[],\r\n    validator?: (value: any, field?: keyof T) => boolean,\r\n    notEmpty?: boolean,\r\n    itemValidator?: (value: any) => boolean\r\n}\r\n\r\nexport type ObjectValidationError = { field?: string, error: string };\r\n","import {FieldConfiguration, validateObject} from \"../../utils/validate-object\";\r\nimport {uniqueValues} from \"ugd10a\";\r\n\r\nexport class MessageValidator<T> {\r\n\r\n    private readonly allFields: string[];\r\n    private readonly requiredFields: string[];\r\n    private readonly configMap: Map<string, Configuration<T>>;\r\n    private readonly fieldSerializers: Map<string, Configuration<T>['itemSerializer']>;\r\n    private readonly fieldDeserializers: Map<string, Configuration<T>['itemDeserializer']>;\r\n    private _lastValidationError;\r\n\r\n    constructor(readonly config: ReadonlyArray<Configuration<T>>) {\r\n        const allFields = [];\r\n        const requiredFields = [];\r\n        const configMap = new Map<string, Configuration<T>>();\r\n        const fieldSerializers = new Map<string, Configuration<T>['itemSerializer']>();\r\n        const fieldDeserializers = new Map<string, Configuration<T>['itemDeserializer']>();\r\n\r\n        config.map(value => {\r\n            const {field, optional} = value;\r\n            configMap.set(field as string, value);\r\n            if (value.itemSerializer) {\r\n                fieldSerializers.set(field as string, value.itemSerializer);\r\n            }\r\n            if (value.itemDeserializer) {\r\n                fieldDeserializers.set(field as string, value.itemDeserializer);\r\n            }\r\n            return {field: field as string, optional};\r\n        }).forEach(({field, optional}) => {\r\n            allFields.push(field);\r\n            if (optional) {\r\n                requiredFields.push(field);\r\n            }\r\n        });\r\n        this.allFields = allFields;\r\n        this.requiredFields = requiredFields;\r\n        this.configMap = configMap;\r\n        this.fieldSerializers = fieldSerializers;\r\n        this.fieldDeserializers = fieldDeserializers;\r\n    }\r\n\r\n    get lastValidationError() {\r\n        return this._lastValidationError;\r\n    }\r\n\r\n    readonly validate = (value: unknown): value is T => {\r\n        const result = validateObject(value, this.config as any);\r\n        this._lastValidationError = result === true ? null : result;\r\n        return result === true;\r\n    };\r\n\r\n    readonly serialize = (value: T): string | null => {\r\n        const {validate, allFields, fieldSerializers} = this;\r\n        if (!validate(value)) {\r\n            return null;\r\n        }\r\n        return JSON.stringify(allFields.map(field => {\r\n            if (fieldSerializers.has(field)) {\r\n                const entrySerializer = fieldSerializers.get(field);\r\n                const {type} = this.configMap.get(field);\r\n                if (type === \"array\" || type === \"string[]\") {\r\n                    return value[field].map(entrySerializer);\r\n                }\r\n                return entrySerializer(value[field]);\r\n            }\r\n            return value[field];\r\n        }));\r\n    };\r\n\r\n    readonly deserialize = (value: string | Array<any>): T | null => {\r\n        const {allFields, fieldDeserializers, configMap} = this;\r\n        let data;\r\n        if (typeof value === \"string\") {\r\n            try {\r\n                data = JSON.parse(value);\r\n            } catch (e) {\r\n                console.log(`Error while deserialize`, {value, e});\r\n                return null;\r\n            }\r\n        } else {\r\n            data = value;\r\n        }\r\n\r\n        if (!Array.isArray(data) || data.length != allFields.length) {\r\n            console.log(`Error while deserialize - not enough fields`, value);\r\n            return null;\r\n        }\r\n\r\n        const parsed = {};\r\n        allFields.forEach(field => {\r\n            const rawValue = data.shift();\r\n            let parsedValue;\r\n            if (fieldDeserializers.has(field)) {\r\n                const entryDeserializer = fieldDeserializers.get(field);\r\n                const {type} = this.configMap.get(field);\r\n                if (type === \"array\" || type === \"string[]\") {\r\n                    parsedValue = rawValue.map(entryDeserializer);\r\n                } else {\r\n                    parsedValue = entryDeserializer(rawValue);\r\n                }\r\n            } else {\r\n                parsedValue = rawValue;\r\n            }\r\n\r\n            if (Array.isArray(parsedValue) && configMap.get(field).unique) {\r\n                parsed[field] = uniqueValues(parsedValue);\r\n            } else if (parsedValue !== null || !configMap.get(field).optional) {\r\n                parsed[field] = parsedValue;\r\n            }\r\n        });\r\n\r\n        if (this.validate(parsed)) {\r\n            return parsed;\r\n        }\r\n\r\n        console.log(`Error while deserialize - validation has failed`, {value, parsed});\r\n\r\n        return null;\r\n    };\r\n\r\n}\r\n\r\ntype Configuration<T> = FieldConfiguration<T> & {\r\n    itemSerializer?: (value: any) => string,\r\n    itemDeserializer?: (value: string) => any,\r\n    unique?: boolean\r\n}\r\n","import {MessageType} from \"../MessageType\";\r\nimport {MessageValidator} from \"../../util/MessageValidator\";\r\n\r\nexport type PushToClientMessage = {\r\n    type: MessageType.PushToClient,\r\n    time: number,\r\n    messageId: string,\r\n    payload: string,\r\n    channels?: string[],\r\n}\r\n\r\nexport const pushToClientUtil = new MessageValidator<PushToClientMessage>([\r\n    {field: \"type\", exactValue: MessageType.PushToClient},\r\n    {field: \"time\", type: \"number\"},\r\n    {field: \"messageId\", type: \"string\"},\r\n    {field: \"payload\", type: \"string\"},\r\n    {field: \"channels\", type: \"string[]\", optional: true}\r\n]);\r\n","import {PushToClientMessage} from \"../serverMessage/PushToClientMessage\";\r\nimport {MessageValidator} from \"../../util/MessageValidator\";\r\n\r\nexport type CachedMessage = Omit<PushToClientMessage, \"type\">;\r\nexport const cachedMessageUtil = new MessageValidator<CachedMessage>([\r\n    {field: \"time\", type: \"number\"},\r\n    {field: \"messageId\", type: \"string\"},\r\n    {field: \"channels\", type: \"string[]\"},\r\n    {field: \"payload\", type: \"string\"}\r\n]);\r\n","import {MessageType} from \"../MessageType\";\r\nimport {MessageValidator} from \"../../util/MessageValidator\";\r\nimport {CachedMessage, cachedMessageUtil} from \"../cache/CachedMessage\";\r\n\r\nexport type RestoreChannelsResponseMessage = {\r\n    type: MessageType.RestoreResponse,\r\n    payload: Array<CachedMessage>,\r\n}\r\n\r\nexport const restoreResponseUtil = new MessageValidator<RestoreChannelsResponseMessage>([\r\n    {field: \"type\", exactValue: MessageType.RestoreResponse},\r\n    {\r\n        field: \"payload\",\r\n        type: \"array\",\r\n        itemValidator: cachedMessageUtil.validate,\r\n        itemSerializer: cachedMessageUtil.serialize,\r\n        itemDeserializer: cachedMessageUtil.deserialize,\r\n    }\r\n]);\r\n\r\n\r\n","import {valueBelongsToEnum} from \"ugd10a\";\r\nimport {MessageType} from \"../MessageType\";\r\nimport {PushToClientMessage, pushToClientUtil} from \"./PushToClientMessage\";\r\nimport {RestoreChannelsResponseMessage, restoreResponseUtil} from \"./RestoreChannelsResponseMessage\";\r\n\r\nexport type ServerMessage = PushToClientMessage | RestoreChannelsResponseMessage;\r\n\r\nexport const isServerMessage = (value: unknown): value is ServerMessage =>\r\n    pushToClientUtil.validate(value) ||\r\n    restoreResponseUtil.validate(value);\r\n\r\nexport const serializeServerMessage = (value: ServerMessage): string | null => {\r\n    if (pushToClientUtil.validate(value)) {\r\n        return pushToClientUtil.serialize(value);\r\n    }\r\n    if (restoreResponseUtil.validate(value)) {\r\n        return restoreResponseUtil.serialize(value);\r\n    }\r\n    return null;\r\n};\r\n\r\nexport const deserializeServerMessage = (value: string): ServerMessage | null => {\r\n    let rawData: any[];\r\n    try {\r\n        rawData = JSON.parse(value);\r\n    } catch (e) {\r\n        console.log(`Error while deserialize ServerMessage`, {value, e});\r\n        return null;\r\n    }\r\n\r\n    if (!Array.isArray(rawData) || !rawData.length || !valueBelongsToEnum(MessageType, rawData[0])) {\r\n        console.log(`Error while deserialize ServerMessage 2 `, rawData);\r\n        return null;\r\n    }\r\n\r\n    const type = <any>rawData[0] as MessageType;\r\n    if (type === MessageType.PushToClient) {\r\n        return pushToClientUtil.deserialize(rawData);\r\n    }\r\n    if (type === MessageType.RestoreResponse) {\r\n        return restoreResponseUtil.deserialize(rawData);\r\n    }\r\n    return null;\r\n};\r\n","import {MessageType} from \"../MessageType\";\r\nimport {ChannelId} from \"../ChannelId\";\r\nimport {MessageValidator} from \"../../util/MessageValidator\";\r\n\r\nexport type SubscribeMessage = {\r\n    type: MessageType.Subscribe,\r\n    channels: ChannelId[]\r\n}\r\nexport const subscribeMessageUtil = new MessageValidator<SubscribeMessage>([\r\n    {field: \"type\", exactValue: MessageType.Subscribe},\r\n    {field: \"channels\", type: \"string[]\", unique: true}\r\n]);\r\n","import {MessageType} from \"../MessageType\";\r\nimport {MessageValidator} from \"../../util/MessageValidator\";\r\n\r\nexport type UnsubscribeMessage = {\r\n    type: MessageType.Unsubscribe,\r\n    channels: string[]\r\n}\r\nexport const unsubscribeMessageUtil = new MessageValidator<UnsubscribeMessage>([\r\n    {field: \"type\", exactValue: MessageType.Unsubscribe},\r\n    {field: \"channels\", type: \"string[]\"}\r\n]);\r\n","import {MessageValidator} from \"../../util/MessageValidator\";\r\n\r\n/**\r\n * Message cache filter options\r\n */\r\nexport type CacheFilter = {\r\n    // Max age of returned messages in milliseconds\r\n    maxAge?: number,\r\n    // Max number of entries to return\r\n    maxLength?: number,\r\n    // Non inclusive oldest message id to be returned from cache\r\n    messageId?: string\r\n};\r\nexport const cacheFilterUtil = new MessageValidator<CacheFilter>([\r\n    {field: \"maxAge\", type: \"number\", optional: true, itemValidator: value => value > 0},\r\n    {field: \"maxLength\", type: \"number\", optional: true, itemValidator: value => value > 0},\r\n    {field: \"messageId\", type: \"string\", optional: true, notEmpty: true},\r\n]);\r\n","import {MessageType} from \"../MessageType\";\r\nimport {MessageValidator} from \"../../util/MessageValidator\";\r\nimport {CacheFilter, cacheFilterUtil} from \"../cache/CacheFilter\";\r\n\r\nexport type RestoreChannelsRequestMessage = {\r\n    type: MessageType.RestoreRequest,\r\n    channels: RestoreTarget[]\r\n}\r\n\r\nexport type RestoreTarget = {\r\n    channel: string,\r\n    filter?: CacheFilter\r\n}\r\nconst restoreTargetUtil = new MessageValidator<RestoreTarget>([\r\n    {field: \"channel\", type: \"string\"},\r\n    {field: \"filter\", optional: true, type: \"object\",\r\n        itemValidator: cacheFilterUtil.validate,\r\n        itemSerializer: cacheFilterUtil.serialize,\r\n        itemDeserializer: cacheFilterUtil.deserialize,\r\n    },\r\n]);\r\n\r\nexport const restoreRequestUtil = new MessageValidator<RestoreChannelsRequestMessage>([\r\n    {field: \"type\", exactValue: MessageType.RestoreRequest},\r\n    {\r\n        field: \"channels\",\r\n        type: \"array\",\r\n        itemValidator: value => restoreTargetUtil.validate(value)\r\n    }\r\n]);\r\n","export const globalMessageChannel = \"/\";\r\n","import {MessageType} from \"../MessageType\";\r\nimport {MessageValidator} from \"../../util/MessageValidator\";\r\n\r\nexport type PushToServerMessage = {\r\n    type: MessageType.PushToServer,\r\n    channels: string[],\r\n    payload: string\r\n}\r\n\r\nexport const pushToServerUtil = new MessageValidator<PushToServerMessage>([\r\n    {field: \"type\", exactValue: MessageType.PushToServer},\r\n    {field: \"channels\", type: \"string[]\", unique: true},\r\n    {field: \"payload\", type: \"string\"}\r\n]);\r\n","import {CallbackCollection} from \"../../utils/CallbackCollection\";\r\nimport {Adapter} from \"../data/Adapter\";\r\nimport {RestoreChannelsResponseMessage} from \"@deliveryProtocol/data/serverMessage/RestoreChannelsResponseMessage\";\r\nimport {deserializeServerMessage} from \"@deliveryProtocol/data/serverMessage/ServerMessage\";\r\nimport {MessageType} from \"@deliveryProtocol/data/MessageType\";\r\nimport {subscribeMessageUtil} from \"@deliveryProtocol/data/clientMessage/SubscribeMessage\";\r\nimport {unsubscribeMessageUtil} from \"@deliveryProtocol/data/clientMessage/UnsubscribeMessage\";\r\nimport {restoreRequestUtil, RestoreTarget} from \"@deliveryProtocol/data/clientMessage/RestoreChannelsRequestMessage\";\r\nimport {globalMessageChannel} from \"@deliveryProtocol/data/globalMessageChannel\";\r\nimport {pushToServerUtil} from \"@deliveryProtocol/data/clientMessage/PushToServerMessage\";\r\nimport {PushToClientMessage} from \"@deliveryProtocol/data/serverMessage/PushToClientMessage\";\r\n\r\n\r\nexport class SocketClient {\r\n\r\n    private readonly onMessageCallback = new CallbackCollection<PushToClientMessage>();\r\n    private readonly onRestoreCallback = new CallbackCollection<RestoreChannelsResponseMessage>();\r\n\r\n    constructor(private readonly connection: Adapter) {\r\n        connection.onError(this.errorHandler);\r\n        connection.onMessage(this.messageHandler);\r\n    }\r\n\r\n    private readonly errorHandler = (error: string) => {\r\n        console.error(\"Connection error:\", error);\r\n    };\r\n\r\n    private readonly messageHandler = (data: string) => {\r\n        const {onMessageCallback, onRestoreCallback} = this;\r\n        const message = deserializeServerMessage(data);\r\n        switch (message.type) {\r\n            case MessageType.PushToClient:\r\n                onMessageCallback.execute(message);\r\n                break;\r\n            case MessageType.RestoreResponse:\r\n                onRestoreCallback.execute(message);\r\n                break;\r\n            default:\r\n                console.error(`Message of unknown type received:`, message);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Incoming data message callback\r\n     */\r\n    readonly onMessage = this.onMessageCallback.manage;\r\n\r\n    /**\r\n     * Channel restore data callback\r\n     */\r\n    readonly onRestore = this.onRestoreCallback.manage;\r\n\r\n    /**\r\n     * Subscribe to data channel.\r\n     * @param channels Channel or list of channels to subscribe to\r\n     */\r\n    subscribe(...channels: string[]): void {\r\n        this.connection.send(subscribeMessageUtil.serialize({type: MessageType.Subscribe, channels}));\r\n    }\r\n\r\n    /**\r\n     * Unsubscribe from data channel.\r\n     * @param channels Channel or list of channels to unsubscribe from\r\n     */\r\n    unsubscribe(...channels: string[]): void {\r\n        this.connection.send(unsubscribeMessageUtil.serialize({type: MessageType.Unsubscribe, channels}));\r\n    }\r\n\r\n    /**\r\n     * Restore data channel messages with optional filter\r\n     * @param channels Description of single or list of restore targets consisting of channel name and optional\r\n     * cache filter definitions.\r\n     */\r\n    restore(...channels: RestoreTarget[]): void {\r\n        this.connection.send(restoreRequestUtil.serialize({type: MessageType.RestoreRequest, channels}));\r\n    }\r\n\r\n    /**\r\n     * Send message to all data context subscribers\r\n     * @param data Data to be delivered.\r\n     */\r\n    sendGlobalMessage(data: string): void {\r\n        this.sendChannelMessage(data, globalMessageChannel);\r\n    }\r\n\r\n    /**\r\n     * Send message to subscribers of a single or multiple channels.\r\n     * @param data Data to be delivered.\r\n     * @param channels Channel or list of channels to send message to.\r\n     */\r\n    sendChannelMessage(data: string, ...channels: string[]): void {\r\n        this.connection.send(pushToServerUtil.serialize({\r\n            type: MessageType.PushToServer,\r\n            channels,\r\n            payload: data\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Close connection\r\n     */\r\n    close() {\r\n        this.connection.close();\r\n    }\r\n}\r\n\r\n[\"connection\", \"onMessageCallback\", \"onRestoreCallback\", \"errorHandler\", \"messageHandler\"].forEach(prop =>\r\n    Object.defineProperty(SocketClient, prop, {\r\n        enumerable: false,\r\n        writable: false\r\n    })\r\n);\r\n\r\n\r\n","import {WebSocketAdapter} from \"@deliveryProtocolClient/model/WebSocketAdapter\";\r\nimport {SocketClient} from \"@deliveryProtocolClient/model/SocketClient\";\r\n\r\nexport const createClient = (url: string) => new SocketClient(new WebSocketAdapter(url));\r\nexport const version = \"__buildVersion__\";\r\n"],"names":["this","__awaiter"],"mappings":"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"}